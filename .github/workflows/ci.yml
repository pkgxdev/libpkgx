name: CI

on:
  pull_request:
    paths:
      - deno.json
      - deno.lock
      - '**/*.ts'
      - fixtures
      - .github/workflows/ci.yml
  push:
    branches: main
    paths:
      - deno.json
      - deno.lock
      - '**/*.ts'
      - fixtures
      - .github/workflows/ci.yml
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest

    steps:
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v1
      - run: deno cache mod.ts

      - run: deno task test
          --coverage=cov_profile
          --no-check # ⬆signal∶noise & ∵ we have `jobs.typecheck`

      - run: deno coverage cov_profile --lcov --output=cov_profile.lcov

      - uses: coverallsapp/github-action@v2
        with:
          path-to-lcov: cov_profile.lcov
          parallel: true
          flag-name: ${{ matrix.os }}

  upload-coverage:
    needs: tests
    runs-on: ubuntu-latest
    steps:
    - uses: coverallsapp/github-action@v2
      with:
        parallel-finished: true

  verify-usage-as-deno-lib:
    # we’re checking no import-map type imports snuck in
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          path: src
      - uses: denoland/setup-deno@v1
      - run: deno run --no-config --unstable --allow-all src/mod.ts

  dnt:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v1
      - run: deno run -A --unstable .github/deno-to-node.ts

      - run: |
          npm i
          npm start
        working-directory:
          fixtures/npm-integration-test
        if: ${{ matrix.os != 'windows-latest' }}  # can't test on Windows yet, we have no pkgs

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v1
      - run: deno lint

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v1
      - run: deno task typecheck
